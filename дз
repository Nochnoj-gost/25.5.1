
from selenium import webdriver
driver = webdriver.Chrome("\chromedriver.exe")
import pytest
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC


@pytest.fixture(autouse=True)
def testing():
   pytest.driver = webdriver.Chrome('./chromedriver.exe')
   # Переходим на страницу авторизации
   pytest.driver.get('http://petfriends.skillfactory.ru/login')
   yield
   pytest.driver.quit()


   driver.implicitly_wait(10)
   myDynamicElement = driver.find_element(By.CSS_SELECTOR, "html > body > div > div > form > div:nth-of-type(4) > button")
   # Явные ожидания, кнопка Зарегистрироваться


def test_show_my_pets():
   # Вводим email
   pytest.driver.find_element_by_id('email').send_keys('nochnoj-gost@yandex.ru')
   # Вводим пароль
   pytest.driver.find_element_by_id('pass').send_keys('CevthrbVbhf-21586')
   # Нажимаем на кнопку входа в аккаунт
   pytest.driver.find_element_by_css_selector('button[type="submit"]').click()
   # Проверяем, что мы оказались на главной странице пользователя
   assert pytest.driver.find_element_by_tag_name('h1').text == "PetFriends"

   statistics = pytest.find_element(By.XPATH,"/html/body/div[1]/div/div[1]/text()[1]")
   statistics = int(statistics)

   images = pytest.driver.find_elements(By.CSS_SELECTOR, '.card-deck .card-img-top')
   names = pytest.driver.find_elements(By.CSS_SELECTOR, '.card-deck .card-title')
   descriptions = pytest.driver.find_elements(By.CSS_SELECTOR, '.card-deck .card-text')
   for i in range(len(names)):
       assert images[i].get_attribute('src') != ''
       assert names[i].text != ''
       assert descriptions[i].text != ''
       assert ', ' in descriptions[i]
       parts = descriptions[i].text.split(", ")
       assert len(parts[0]) > 0
       assert len(parts[1]) > 0
   # У всех питомцев есть имя, возраст и порода

   unique_names = ()
   for i in range(len(names)):
       if i not in unique_names:
           unique_names.append(i)

   assert len(names) == len(unique_names)
   # У всех питомцев разные имена

   assert len(names) == statistics
   # Присутствуют все питомцы

   count_photo = 0
   count_not_photo = 0
   for i in range(len(photo)):
       if photo[i].get_attribute('src') != '':
           count_photo = count_photo + 1
           else:
           count_not_photo = count_not_photo + 1
   assert count_photo >= statistics // 2 + 1
   # Хотя бы у половины есть фото


element_image = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, "//*[@id="all_my_pets"]/table/tbody/tr[1]/th/img")))
   element_name = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, "//*[@id="all_my_pets"]/table/tbody/tr[1]/td[1]")))
   element_age = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, "//*[@id="all_my_pets"]/table/tbody/tr[1]/td[3]")))
   # Неявные ожидания, 1й питомец в списке
